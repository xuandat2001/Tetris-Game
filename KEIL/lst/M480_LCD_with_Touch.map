Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Small function inlining results

Inlined total of 0 calls.

==============================================================================

Section Cross References

    system_m480.o(.text.SystemCoreClockUpdate) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.PllClock) for PllClock
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.gau32ClkSrcTbl) for gau32ClkSrcTbl
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    system_m480.o(.text.SystemCoreClockUpdate) refers to system_m480.o(.data.CyclesPerUs) for CyclesPerUs
    system_m480.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_m480.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_m480.o(.ARM.exidx.text.SystemInit) refers to system_m480.o(.text.SystemInit) for [Anonymous Symbol]
    startup_m480.o(RESET) refers to startup_m480.o(STACK) for __initial_sp
    startup_m480.o(RESET) refers to startup_m480.o(.text) for Reset_Handler
    startup_m480.o(RESET) refers to main.o(.text.TMR1_IRQHandler) for TMR1_IRQHandler
    startup_m480.o(RESET) refers to ebi_lcd_module.o(.text.TMR3_IRQHandler) for TMR3_IRQHandler
    startup_m480.o(RESET) refers to ebi_lcd_module.o(.text.EADC01_IRQHandler) for EADC01_IRQHandler
    startup_m480.o(.text) refers to system_m480.o(.text.SystemInit) for SystemInit
    startup_m480.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_m480.o(.text) refers to retarget.o(.text.ProcessHardFault) for ProcessHardFault
    main.o(.ARM.exidx.text.SYS_Init) refers to main.o(.text.SYS_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.UART0_Config) refers to main.o(.text.UART0_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.EBI_Config) refers to main.o(.text.EBI_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIO_Config) refers to main.o(.text.GPIO_Config) for [Anonymous Symbol]
    main.o(.text.TMR1_IRQHandler) refers to main.o(.bss.Timer1_flag) for Timer1_flag
    main.o(.text.TMR1_IRQHandler) refers to main.o(.bss.Timer1_cnt) for Timer1_cnt
    main.o(.ARM.exidx.text.TMR1_IRQHandler) refers to main.o(.text.TMR1_IRQHandler) for [Anonymous Symbol]
    main.o(.text.Timer1_Init) refers to main.o(.bss.Timer1_flag) for Timer1_flag
    main.o(.text.Timer1_Init) refers to main.o(.bss.Timer1_cnt) for Timer1_cnt
    main.o(.ARM.exidx.text.Timer1_Init) refers to main.o(.text.Timer1_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.EADC_Config) refers to main.o(.text.EADC_Config) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.SYS_Init) for SYS_Init
    main.o(.text.main) refers to putchar.o(i.putchar) for putchar
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .Lstr.10
    main.o(.text.main) refers to puts.o(i.puts) for puts
    main.o(.text.main) refers to clk.o(.text.CLK_GetHXTFreq) for CLK_GetHXTFreq
    main.o(.text.main) refers to printf8.o(i.__0printf$8) for __2printf
    main.o(.text.main) refers to clk.o(.text.CLK_GetCPUFreq) for CLK_GetCPUFreq
    main.o(.text.main) refers to ebi_lcd_module.o(.text.ILI9341_Initial) for ILI9341_Initial
    main.o(.text.main) refers to main.o(.bss.Timer1_cnt) for Timer1_cnt
    main.o(.text.main) refers to main.o(.bss.Timer1_flag) for Timer1_flag
    main.o(.text.main) refers to ebi_lcd_module.o(.text.LCD_BlankArea) for LCD_BlankArea
    main.o(.text.main) refers to ebi_lcd_module.o(.text.LCD_PutString) for LCD_PutString
    main.o(.text.main) refers to welcomescreen.o(.rodata.WelcomeScreen) for WelcomeScreen
    main.o(.text.main) refers to gameloop.o(.text.LCD_Picture) for LCD_Picture
    main.o(.text.main) refers to ebi_lcd_module.o(.text.Get_TP_X) for Get_TP_X
    main.o(.text.main) refers to ebi_lcd_module.o(.text.Get_TP_Y) for Get_TP_Y
    main.o(.text.main) refers to gameloop.o(.text.gameLoop) for gameLoop
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.TMR3_IRQHandler) refers to ebi_lcd_module.o(.bss.Timer3_flag) for Timer3_flag
    ebi_lcd_module.o(.text.TMR3_IRQHandler) refers to ebi_lcd_module.o(.bss.Timer3_cnt) for Timer3_cnt
    ebi_lcd_module.o(.ARM.exidx.text.TMR3_IRQHandler) refers to ebi_lcd_module.o(.text.TMR3_IRQHandler) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.Timer3_Init) refers to ebi_lcd_module.o(.bss.Timer3_flag) for Timer3_flag
    ebi_lcd_module.o(.text.Timer3_Init) refers to ebi_lcd_module.o(.bss.Timer3_cnt) for Timer3_cnt
    ebi_lcd_module.o(.ARM.exidx.text.Timer3_Init) refers to ebi_lcd_module.o(.text.Timer3_Init) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_REG) refers to ebi_lcd_module.o(.text.LCD_WR_REG) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_DATA) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_RD_DATA) refers to ebi_lcd_module.o(.text.LCD_RD_DATA) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_SetWindow) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.ILI9341_Initial) refers to system_m480.o(.data.CyclesPerUs) for CyclesPerUs
    ebi_lcd_module.o(.text.ILI9341_Initial) refers to puts.o(i.puts) for puts
    ebi_lcd_module.o(.ARM.exidx.text.ILI9341_Initial) refers to ebi_lcd_module.o(.text.ILI9341_Initial) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.LCD_PutChar8x16) refers to image.o(.rodata.Font8x16) for Font8x16
    ebi_lcd_module.o(.ARM.exidx.text.LCD_PutChar8x16) refers to ebi_lcd_module.o(.text.LCD_PutChar8x16) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.LCD_PutString) refers to ebi_lcd_module.o(.text.LCD_PutChar8x16) for LCD_PutChar8x16
    ebi_lcd_module.o(.ARM.exidx.text.LCD_PutString) refers to ebi_lcd_module.o(.text.LCD_PutString) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.LCD_PutChar16x32) refers to image_16x32.o(.rodata.Font16x32) for Font16x32
    ebi_lcd_module.o(.ARM.exidx.text.LCD_PutChar16x32) refers to ebi_lcd_module.o(.text.LCD_PutChar16x32) for [Anonymous Symbol]
    ebi_lcd_module.o(.ARM.exidx.text.LCD_BlankArea) refers to ebi_lcd_module.o(.text.LCD_BlankArea) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.Get_TP_X) refers to gpio.o(.text.GPIO_SetMode) for GPIO_SetMode
    ebi_lcd_module.o(.text.Get_TP_X) refers to eadc.o(.text.EADC_ConfigSampleModule) for EADC_ConfigSampleModule
    ebi_lcd_module.o(.text.Get_TP_X) refers to ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP) for g_u32AdcIntFlag_TP
    ebi_lcd_module.o(.text.Get_TP_X) refers to dflti.o(.text) for __aeabi_i2d
    ebi_lcd_module.o(.text.Get_TP_X) refers to ddiv.o(.text) for __aeabi_ddiv
    ebi_lcd_module.o(.text.Get_TP_X) refers to dfixi.o(.text) for __aeabi_d2iz
    ebi_lcd_module.o(.text.Get_TP_X) refers to printf8.o(i.__0printf$8) for __2printf
    ebi_lcd_module.o(.ARM.exidx.text.Get_TP_X) refers to ebi_lcd_module.o(.text.Get_TP_X) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.Get_TP_Y) refers to gpio.o(.text.GPIO_SetMode) for GPIO_SetMode
    ebi_lcd_module.o(.text.Get_TP_Y) refers to eadc.o(.text.EADC_ConfigSampleModule) for EADC_ConfigSampleModule
    ebi_lcd_module.o(.text.Get_TP_Y) refers to ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP) for g_u32AdcIntFlag_TP
    ebi_lcd_module.o(.text.Get_TP_Y) refers to dflti.o(.text) for __aeabi_i2d
    ebi_lcd_module.o(.text.Get_TP_Y) refers to ddiv.o(.text) for __aeabi_ddiv
    ebi_lcd_module.o(.text.Get_TP_Y) refers to dfixi.o(.text) for __aeabi_d2iz
    ebi_lcd_module.o(.text.Get_TP_Y) refers to printf8.o(i.__0printf$8) for __2printf
    ebi_lcd_module.o(.ARM.exidx.text.Get_TP_Y) refers to ebi_lcd_module.o(.text.Get_TP_Y) for [Anonymous Symbol]
    ebi_lcd_module.o(.text.EADC01_IRQHandler) refers to ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP) for g_u32AdcIntFlag_TP
    ebi_lcd_module.o(.ARM.exidx.text.EADC01_IRQHandler) refers to ebi_lcd_module.o(.text.EADC01_IRQHandler) for [Anonymous Symbol]
    gameloop.o(.text.LCD_Picture) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.LCD_Picture) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.LCD_Picture) refers to gameloop.o(.text.LCD_Picture) for [Anonymous Symbol]
    gameloop.o(.text.LCD_Draw_FilledSquare) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.LCD_Draw_FilledSquare) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.LCD_Draw_FilledSquare) refers to gameloop.o(.text.LCD_Draw_FilledSquare) for [Anonymous Symbol]
    gameloop.o(.text.LCD_Draw_SquareBorder) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.LCD_Draw_SquareBorder) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.LCD_Draw_SquareBorder) refers to gameloop.o(.text.LCD_Draw_SquareBorder) for [Anonymous Symbol]
    gameloop.o(.text.LCD_Draw_SquareRow) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.LCD_Draw_SquareRow) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.LCD_Draw_SquareRow) refers to gameloop.o(.text.LCD_Draw_SquareRow) for [Anonymous Symbol]
    gameloop.o(.text.LCD_Draw_SquareColumn) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.LCD_Draw_SquareColumn) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.LCD_Draw_SquareColumn) refers to gameloop.o(.text.LCD_Draw_SquareColumn) for [Anonymous Symbol]
    gameloop.o(.text.Draw_I_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_I_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_I_Shape) refers to gameloop.o(.text.Draw_I_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_J_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_J_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_J_Shape) refers to gameloop.o(.text.Draw_J_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_L_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_L_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_L_Shape) refers to gameloop.o(.text.Draw_L_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_S_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_S_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_S_Shape) refers to gameloop.o(.text.Draw_S_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_O_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_O_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_O_Shape) refers to gameloop.o(.text.Draw_O_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_T_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_T_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_T_Shape) refers to gameloop.o(.text.Draw_T_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_Z_Shape) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.Draw_Z_Shape) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.ARM.exidx.text.Draw_Z_Shape) refers to gameloop.o(.text.Draw_Z_Shape) for [Anonymous Symbol]
    gameloop.o(.text.Draw_Sidebar_UI) refers to gameloop.o(.rodata.str1.1) for .L.str
    gameloop.o(.text.Draw_Sidebar_UI) refers to ebi_lcd_module.o(.text.LCD_PutString) for LCD_PutString
    gameloop.o(.ARM.exidx.text.Draw_Sidebar_UI) refers to gameloop.o(.text.Draw_Sidebar_UI) for [Anonymous Symbol]
    gameloop.o(.text.LCD_Draw_Border) refers to ebi_lcd_module.o(.text.LCD_SetWindow) for LCD_SetWindow
    gameloop.o(.text.LCD_Draw_Border) refers to backgroundscreenplay.o(.rodata.backgroundScreenPlay) for backgroundScreenPlay
    gameloop.o(.text.LCD_Draw_Border) refers to ebi_lcd_module.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    gameloop.o(.text.LCD_Draw_Border) refers to gameloop.o(.text.LCD_Draw_SquareBorder) for LCD_Draw_SquareBorder
    gameloop.o(.text.LCD_Draw_Border) refers to gameloop.o(.rodata.str1.1) for .L.str
    gameloop.o(.text.LCD_Draw_Border) refers to ebi_lcd_module.o(.text.LCD_PutString) for LCD_PutString
    gameloop.o(.ARM.exidx.text.LCD_Draw_Border) refers to gameloop.o(.text.LCD_Draw_Border) for [Anonymous Symbol]
    gameloop.o(.ARM.exidx.text.Is_Button_Pressed) refers to gameloop.o(.text.Is_Button_Pressed) for [Anonymous Symbol]
    gameloop.o(.ARM.exidx.text.Check_Input) refers to gameloop.o(.text.Check_Input) for [Anonymous Symbol]
    gameloop.o(.text.gameLoop) refers to gameloop.o(.text.LCD_Draw_Border) for LCD_Draw_Border
    gameloop.o(.text.gameLoop) refers to gameloop.o(.bss.isPaused) for isPaused
    gameloop.o(.text.gameLoop) refers to gameloop.o(.data.nextShapeIndex) for nextShapeIndex
    gameloop.o(.text.gameLoop) refers to gamelogic.o(.data.shapeFunctions) for shapeFunctions
    gameloop.o(.text.gameLoop) refers to system_m480.o(.data.CyclesPerUs) for CyclesPerUs
    gameloop.o(.text.gameLoop) refers to gamelogic.o(.text.Draw_Current_Shape) for Draw_Current_Shape
    gameloop.o(.ARM.exidx.text.gameLoop) refers to gameloop.o(.text.gameLoop) for [Anonymous Symbol]
    gamelogic.o(.ARM.exidx.text.Rotate_Clockwise) refers to gamelogic.o(.text.Rotate_Clockwise) for [Anonymous Symbol]
    gamelogic.o(.text.Draw_Tetromino) refers to gameloop.o(.text.LCD_Draw_FilledSquare) for LCD_Draw_FilledSquare
    gamelogic.o(.ARM.exidx.text.Draw_Tetromino) refers to gamelogic.o(.text.Draw_Tetromino) for [Anonymous Symbol]
    gamelogic.o(.text.Prepare_Next_Shape) refers to rand.o(.text) for rand
    gamelogic.o(.text.Prepare_Next_Shape) refers to gameloop.o(.data.nextShapeIndex) for nextShapeIndex
    gamelogic.o(.ARM.exidx.text.Prepare_Next_Shape) refers to gamelogic.o(.text.Prepare_Next_Shape) for [Anonymous Symbol]
    gamelogic.o(.text.Draw_Current_Shape) refers to gameloop.o(.data.nextShapeIndex) for nextShapeIndex
    gamelogic.o(.text.Draw_Current_Shape) refers to rand.o(.text) for rand
    gamelogic.o(.text.Draw_Current_Shape) refers to gamelogic.o(.data.shapeFunctions) for shapeFunctions
    gamelogic.o(.text.Draw_Current_Shape) refers to gamelogic.o(.data.shapeNames) for shapeNames
    gamelogic.o(.text.Draw_Current_Shape) refers to printf8.o(i.__0printf$8) for __2printf
    gamelogic.o(.ARM.exidx.text.Draw_Current_Shape) refers to gamelogic.o(.text.Draw_Current_Shape) for [Anonymous Symbol]
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_I_Shape) for Draw_I_Shape
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_J_Shape) for Draw_J_Shape
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_L_Shape) for Draw_L_Shape
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_O_Shape) for Draw_O_Shape
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_S_Shape) for Draw_S_Shape
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_T_Shape) for Draw_T_Shape
    gamelogic.o(.text.Test_Draw_All_Shapes) refers to gameloop.o(.text.Draw_Z_Shape) for Draw_Z_Shape
    gamelogic.o(.ARM.exidx.text.Test_Draw_All_Shapes) refers to gamelogic.o(.text.Test_Draw_All_Shapes) for [Anonymous Symbol]
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_I_Shape) for Draw_I_Shape
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_J_Shape) for Draw_J_Shape
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_L_Shape) for Draw_L_Shape
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_O_Shape) for Draw_O_Shape
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_S_Shape) for Draw_S_Shape
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_T_Shape) for Draw_T_Shape
    gamelogic.o(.data.shapeFunctions) refers to gameloop.o(.text.Draw_Z_Shape) for Draw_Z_Shape
    gamelogic.o(.data.shapeNames) refers to gamelogic.o(.rodata.str1.1) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableCKO) refers to clk.o(.text.CLK_DisableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableModuleClock) refers to clk.o(.text.CLK_DisableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableCKO) refers to clk.o(.text.CLK_EnableCKO) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableModuleClock) refers to clk.o(.text.CLK_EnableModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetModuleClock) refers to clk.o(.text.CLK_SetModuleClock) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_PowerDown) refers to clk.o(.text.CLK_PowerDown) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_Idle) refers to clk.o(.text.CLK_Idle) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetHXTFreq) refers to clk.o(.text.CLK_GetHXTFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetLXTFreq) refers to clk.o(.text.CLK_GetLXTFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK0Freq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq) refers to clk.o(.text.CLK_GetPCLK0Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetPCLK1Freq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq) refers to clk.o(.text.CLK_GetPCLK1Freq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetHCLKFreq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetHCLKFreq) refers to clk.o(.text.CLK_GetHCLKFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_GetCPUFreq) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.text.CLK_GetCPUFreq) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_GetCPUFreq) refers to clk.o(.text.CLK_GetCPUFreq) for [Anonymous Symbol]
    clk.o(.text.CLK_SetCoreClock) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_EnablePLL) for CLK_EnablePLL
    clk.o(.text.CLK_SetCoreClock) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.ARM.exidx.text.CLK_SetCoreClock) refers to clk.o(.text.CLK_SetCoreClock) for [Anonymous Symbol]
    clk.o(.text.CLK_WaitClockReady) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_WaitClockReady) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.ARM.exidx.text.CLK_WaitClockReady) refers to clk.o(.text.CLK_WaitClockReady) for [Anonymous Symbol]
    clk.o(.text.CLK_EnablePLL) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_EnablePLL) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetPLLClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_EnablePLL) refers to clk.o(.text.CLK_EnablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_SetHCLK) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetHCLK) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.text.CLK_SetHCLK) refers to system_m480.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    clk.o(.ARM.exidx.text.CLK_SetHCLK) refers to clk.o(.text.CLK_SetHCLK) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc) refers to clk.o(.text.CLK_SetSysTickClockSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableXtalRC) refers to clk.o(.text.CLK_EnableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableXtalRC) refers to clk.o(.text.CLK_DisableXtalRC) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisablePLL) refers to clk.o(.text.CLK_DisablePLL) for [Anonymous Symbol]
    clk.o(.text.CLK_GetPLLClockFreq) refers to clk.o(.rodata.cst4) for .L__const.CLK_GetPLLClockFreq.au8NoTbl
    clk.o(.ARM.exidx.text.CLK_GetPLLClockFreq) refers to clk.o(.text.CLK_GetPLLClockFreq) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSysTick) refers to clk.o(.text.CLK_EnableSysTick) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_DisableSysTick) refers to clk.o(.text.CLK_DisableSysTick) for [Anonymous Symbol]
    clk.o(.text.CLK_SetPowerDownMode) refers to clk.o(.bss.g_CLK_i32ErrCode) for g_CLK_i32ErrCode
    clk.o(.text.CLK_SetPowerDownMode) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    clk.o(.ARM.exidx.text.CLK_SetPowerDownMode) refers to clk.o(.text.CLK_SetPowerDownMode) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin) refers to clk.o(.text.CLK_EnableDPDWKPin) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetPMUWKSrc) refers to clk.o(.text.CLK_GetPMUWKSrc) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_EnableSPDWKPin) refers to clk.o(.text.CLK_EnableSPDWKPin) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockSource) refers to clk.o(.text.CLK_GetModuleClockSource) for [Anonymous Symbol]
    clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider) refers to clk.o(.text.CLK_GetModuleClockDivider) for [Anonymous Symbol]
    retarget.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget.o(.text.__aeabi_assert) refers to fwrite.o(i.fwrite) for fwrite
    retarget.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget.o(.ARM.exidx.text.__aeabi_assert) refers to retarget.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.abort) refers to retarget.o(.text.abort) for [Anonymous Symbol]
    retarget.o(.text.ProcessHardFault) refers to printf8.o(i.__0printf$8) for __2printf
    retarget.o(.text.ProcessHardFault) refers to puts.o(i.puts) for puts
    retarget.o(.text.ProcessHardFault) refers to retarget.o(.rodata.str1.1) for .Lstr.16
    retarget.o(.ARM.exidx.text.ProcessHardFault) refers to retarget.o(.text.ProcessHardFault) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar_ToUART) refers to retarget.o(.text.SendChar_ToUART) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.SendChar) refers to retarget.o(.text.SendChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.GetChar) refers to retarget.o(.text.GetChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.kbhit) refers to retarget.o(.text.kbhit) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.IsDebugFifoEmpty) refers to retarget.o(.text.IsDebugFifoEmpty) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._ttywrch) refers to retarget.o(.text._ttywrch) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fputc) refers to retarget.o(.text.fputc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.fgetc) refers to retarget.o(.text.fgetc) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ferror) refers to retarget.o(.text.ferror) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ClearResetSrc) refers to sys.o(.text.SYS_ClearResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetBODStatus) refers to sys.o(.text.SYS_GetBODStatus) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_GetResetSrc) refers to sys.o(.text.SYS_GetResetSrc) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_IsRegLocked) refers to sys.o(.text.SYS_IsRegLocked) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ReadPDID) refers to sys.o(.text.SYS_ReadPDID) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetChip) refers to sys.o(.text.SYS_ResetChip) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetCPU) refers to sys.o(.text.SYS_ResetCPU) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_ResetModule) refers to sys.o(.text.SYS_ResetModule) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_EnableBOD) refers to sys.o(.text.SYS_EnableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_DisableBOD) refers to sys.o(.text.SYS_DisableBOD) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_SetPowerLevel) refers to sys.o(.text.SYS_SetPowerLevel) for [Anonymous Symbol]
    sys.o(.ARM.exidx.text.SYS_SetVRef) refers to sys.o(.text.SYS_SetVRef) for [Anonymous Symbol]
    timer.o(.text.TIMER_Open) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_Open) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_Open) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.ARM.exidx.text.TIMER_Open) refers to timer.o(.text.TIMER_Open) for [Anonymous Symbol]
    timer.o(.text.TIMER_GetModuleClock) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_GetModuleClock) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_GetModuleClock) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.ARM.exidx.text.TIMER_GetModuleClock) refers to timer.o(.text.TIMER_GetModuleClock) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_Close) refers to timer.o(.text.TIMER_Close) for [Anonymous Symbol]
    timer.o(.text.TIMER_Delay) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_Delay) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_Delay) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.text.TIMER_Delay) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.ARM.exidx.text.TIMER_Delay) refers to timer.o(.text.TIMER_Delay) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableCapture) refers to timer.o(.text.TIMER_EnableCapture) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableCapture) refers to timer.o(.text.TIMER_DisableCapture) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableEventCounter) refers to timer.o(.text.TIMER_EnableEventCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableEventCounter) refers to timer.o(.text.TIMER_DisableEventCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_EnableFreqCounter) refers to timer.o(.text.TIMER_EnableFreqCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_DisableFreqCounter) refers to timer.o(.text.TIMER_DisableFreqCounter) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_SetTriggerSource) refers to timer.o(.text.TIMER_SetTriggerSource) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.TIMER_SetTriggerTarget) refers to timer.o(.text.TIMER_SetTriggerTarget) for [Anonymous Symbol]
    timer.o(.text.TIMER_ResetCounter) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    timer.o(.text.TIMER_ResetCounter) refers to clk.o(.text.CLK_GetPCLK0Freq) for CLK_GetPCLK0Freq
    timer.o(.text.TIMER_ResetCounter) refers to timer.o(.rodata.cst32) for .L__const.TIMER_GetModuleClock.au32Clk
    timer.o(.text.TIMER_ResetCounter) refers to clk.o(.text.CLK_GetPCLK1Freq) for CLK_GetPCLK1Freq
    timer.o(.ARM.exidx.text.TIMER_ResetCounter) refers to timer.o(.text.TIMER_ResetCounter) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_ClearIntFlag) refers to uart.o(.text.UART_ClearIntFlag) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Close) refers to uart.o(.text.UART_Close) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableFlowCtrl) refers to uart.o(.text.UART_DisableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_DisableInt) refers to uart.o(.text.UART_DisableInt) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableFlowCtrl) refers to uart.o(.text.UART_EnableFlowCtrl) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_EnableInt) refers to uart.o(.text.UART_EnableInt) for [Anonymous Symbol]
    uart.o(.text.UART_Open) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.ARM.exidx.text.UART_Open) refers to uart.o(.text.UART_Open) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Read) refers to uart.o(.text.UART_Read) for [Anonymous Symbol]
    uart.o(.text.UART_SetLineConfig) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.ARM.exidx.text.UART_SetLineConfig) refers to uart.o(.text.UART_SetLineConfig) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SetTimeoutCnt) refers to uart.o(.text.UART_SetTimeoutCnt) for [Anonymous Symbol]
    uart.o(.text.UART_SelectIrDAMode) refers to clk.o(.text.CLK_GetPLLClockFreq) for CLK_GetPLLClockFreq
    uart.o(.ARM.exidx.text.UART_SelectIrDAMode) refers to uart.o(.text.UART_SelectIrDAMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectRS485Mode) refers to uart.o(.text.UART_SelectRS485Mode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_SelectLINMode) refers to uart.o(.text.UART_SelectLINMode) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART_Write) refers to uart.o(.text.UART_Write) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetMode) refers to gpio.o(.text.GPIO_SetMode) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_EnableInt) refers to gpio.o(.text.GPIO_EnableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_DisableInt) refers to gpio.o(.text.GPIO_DisableInt) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl) refers to gpio.o(.text.GPIO_SetSlewCtl) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_SetPullCtl) refers to gpio.o(.text.GPIO_SetPullCtl) for [Anonymous Symbol]
    eadc.o(.text.EADC_Open) refers to system_m480.o(.data.SystemCoreClock) for SystemCoreClock
    eadc.o(.text.EADC_Open) refers to eadc.o(.bss.g_EADC_i32ErrCode) for g_EADC_i32ErrCode
    eadc.o(.ARM.exidx.text.EADC_Open) refers to eadc.o(.text.EADC_Open) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_Close) refers to eadc.o(.text.EADC_Close) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_ConfigSampleModule) refers to eadc.o(.text.EADC_ConfigSampleModule) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_SetTriggerDelayTime) refers to eadc.o(.text.EADC_SetTriggerDelayTime) for [Anonymous Symbol]
    eadc.o(.ARM.exidx.text.EADC_SetExtendSampleTime) refers to eadc.o(.text.EADC_SetExtendSampleTime) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_Open) refers to ebi.o(.text.EBI_Open) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_Close) refers to ebi.o(.text.EBI_Close) for [Anonymous Symbol]
    ebi.o(.ARM.exidx.text.EBI_SetBusTiming) refers to ebi.o(.text.EBI_SetBusTiming) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to retarget.o(.bss.__stdout) for __stdout
    fwrite.o(i.fwrite) refers to retarget.o(.text.fputc) for fputc
    putchar.o(i.putchar) refers to retarget.o(.text.fputc) for fputc
    putchar.o(i.putchar) refers to retarget.o(.bss.__stdout) for __stdout
    fputs_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to retarget.o(.bss.__stdout) for __stdout
    fwrite_e.o(.text) refers to retarget.o(.text.fputc) for fputc
    rand.o(.text) refers to rand.o(.data) for .data
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to retarget.o(.bss.__stdout) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to retarget.o(.bss.__stdout) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to retarget.o(.bss.__stdout) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to retarget.o(.bss.__stdout) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to retarget.o(.bss.__stdout) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to retarget.o(.bss.__stdout) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to retarget.o(.bss.__stdout) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to retarget.o(.bss.__stdout) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to retarget.o(.bss.__stdout) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to retarget.o(.bss.__stdout) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to retarget.o(.bss.__stdout) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to retarget.o(.bss.__stdout) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to retarget.o(.bss.__stdout) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to retarget.o(.bss.__stdout) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to retarget.o(.bss.__stdout) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to retarget.o(.bss.__stdout) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to retarget.o(.bss.__stdout) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to retarget.o(.bss.__stdout) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to retarget.o(.bss.__stdout) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to retarget.o(.bss.__stdout) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.bss.__stdout) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.bss.__stdout) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_m480.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_m480.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing system_m480.o(.text), (0 bytes).
    Removing system_m480.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_m480.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing startup_m480.o(HEAP), (256 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.SYS_Init), (8 bytes).
    Removing main.o(.text.UART0_Config), (80 bytes).
    Removing main.o(.ARM.exidx.text.UART0_Config), (8 bytes).
    Removing main.o(.text.EBI_Config), (42 bytes).
    Removing main.o(.ARM.exidx.text.EBI_Config), (8 bytes).
    Removing main.o(.text.GPIO_Config), (34 bytes).
    Removing main.o(.ARM.exidx.text.GPIO_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.TMR1_IRQHandler), (8 bytes).
    Removing main.o(.text.Timer1_Init), (106 bytes).
    Removing main.o(.ARM.exidx.text.Timer1_Init), (8 bytes).
    Removing main.o(.text.EADC_Config), (114 bytes).
    Removing main.o(.ARM.exidx.text.EADC_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing ebi_lcd_module.o(.text), (0 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.TMR3_IRQHandler), (8 bytes).
    Removing ebi_lcd_module.o(.text.Timer3_Init), (68 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.Timer3_Init), (8 bytes).
    Removing ebi_lcd_module.o(.text.LCD_WR_REG), (24 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_REG), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_WR_DATA), (8 bytes).
    Removing ebi_lcd_module.o(.text.LCD_RD_DATA), (10 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_RD_DATA), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_SetWindow), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.ILI9341_Initial), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_PutChar8x16), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_PutString), (8 bytes).
    Removing ebi_lcd_module.o(.text.LCD_PutChar16x32), (394 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_PutChar16x32), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.LCD_BlankArea), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.Get_TP_X), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.Get_TP_Y), (8 bytes).
    Removing ebi_lcd_module.o(.ARM.exidx.text.EADC01_IRQHandler), (8 bytes).
    Removing image.o(.text), (0 bytes).
    Removing image_16x32.o(.text), (0 bytes).
    Removing image_16x32.o(.rodata.Font16x32), (768 bytes).
    Removing picture.o(.text), (0 bytes).
    Removing picture.o(.rodata.gImage_Dog), (153600 bytes).
    Removing gameloop.o(.text), (0 bytes).
    Removing gameloop.o(.ARM.exidx.text.LCD_Picture), (8 bytes).
    Removing gameloop.o(.text.LCD_Draw_FilledSquare), (94 bytes).
    Removing gameloop.o(.ARM.exidx.text.LCD_Draw_FilledSquare), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.LCD_Draw_SquareBorder), (8 bytes).
    Removing gameloop.o(.text.LCD_Draw_SquareRow), (154 bytes).
    Removing gameloop.o(.ARM.exidx.text.LCD_Draw_SquareRow), (8 bytes).
    Removing gameloop.o(.text.LCD_Draw_SquareColumn), (154 bytes).
    Removing gameloop.o(.ARM.exidx.text.LCD_Draw_SquareColumn), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_I_Shape), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_J_Shape), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_L_Shape), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_S_Shape), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_O_Shape), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_T_Shape), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_Z_Shape), (8 bytes).
    Removing gameloop.o(.text.Draw_Sidebar_UI), (148 bytes).
    Removing gameloop.o(.ARM.exidx.text.Draw_Sidebar_UI), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.LCD_Draw_Border), (8 bytes).
    Removing gameloop.o(.text.Is_Button_Pressed), (4 bytes).
    Removing gameloop.o(.ARM.exidx.text.Is_Button_Pressed), (8 bytes).
    Removing gameloop.o(.text.Check_Input), (2 bytes).
    Removing gameloop.o(.ARM.exidx.text.Check_Input), (8 bytes).
    Removing gameloop.o(.ARM.exidx.text.gameLoop), (8 bytes).
    Removing welcomescreen.o(.text), (0 bytes).
    Removing backgroundscreenplay.o(.text), (0 bytes).
    Removing gamelogic.o(.text), (0 bytes).
    Removing gamelogic.o(.text.Rotate_Clockwise), (42 bytes).
    Removing gamelogic.o(.ARM.exidx.text.Rotate_Clockwise), (8 bytes).
    Removing gamelogic.o(.text.Draw_Tetromino), (166 bytes).
    Removing gamelogic.o(.ARM.exidx.text.Draw_Tetromino), (8 bytes).
    Removing gamelogic.o(.text.Prepare_Next_Shape), (42 bytes).
    Removing gamelogic.o(.ARM.exidx.text.Prepare_Next_Shape), (8 bytes).
    Removing gamelogic.o(.ARM.exidx.text.Draw_Current_Shape), (8 bytes).
    Removing gamelogic.o(.text.Test_Draw_All_Shapes), (76 bytes).
    Removing gamelogic.o(.ARM.exidx.text.Test_Draw_All_Shapes), (8 bytes).
    Removing gamelogic.o(.data.shapes), (252 bytes).
    Removing clk.o(.text), (0 bytes).
    Removing clk.o(.text.CLK_DisableCKO), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableCKO), (8 bytes).
    Removing clk.o(.text.CLK_DisableModuleClock), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_EnableCKO), (38 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableCKO), (8 bytes).
    Removing clk.o(.text.CLK_EnableModuleClock), (34 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_SetModuleClock), (158 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetModuleClock), (8 bytes).
    Removing clk.o(.text.CLK_PowerDown), (50 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_PowerDown), (8 bytes).
    Removing clk.o(.text.CLK_Idle), (36 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_Idle), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetLXTFreq), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetLXTFreq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK0Freq), (128 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK0Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetPCLK1Freq), (130 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPCLK1Freq), (8 bytes).
    Removing clk.o(.text.CLK_GetHCLKFreq), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetHCLKFreq), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetCPUFreq), (8 bytes).
    Removing clk.o(.text.CLK_SetCoreClock), (336 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetCoreClock), (8 bytes).
    Removing clk.o(.text.CLK_WaitClockReady), (108 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_WaitClockReady), (8 bytes).
    Removing clk.o(.text.CLK_EnablePLL), (1364 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnablePLL), (8 bytes).
    Removing clk.o(.text.CLK_SetHCLK), (168 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetHCLK), (8 bytes).
    Removing clk.o(.text.CLK_SetSysTickClockSrc), (20 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetSysTickClockSrc), (8 bytes).
    Removing clk.o(.text.CLK_EnableXtalRC), (16 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisableXtalRC), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableXtalRC), (8 bytes).
    Removing clk.o(.text.CLK_DisablePLL), (18 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisablePLL), (8 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPLLClockFreq), (8 bytes).
    Removing clk.o(.text.CLK_EnableSysTick), (64 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_DisableSysTick), (14 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_DisableSysTick), (8 bytes).
    Removing clk.o(.text.CLK_SetPowerDownMode), (168 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_SetPowerDownMode), (8 bytes).
    Removing clk.o(.text.CLK_EnableDPDWKPin), (86 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableDPDWKPin), (8 bytes).
    Removing clk.o(.text.CLK_GetPMUWKSrc), (12 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetPMUWKSrc), (8 bytes).
    Removing clk.o(.text.CLK_EnableSPDWKPin), (40 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_EnableSPDWKPin), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockSource), (180 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockSource), (8 bytes).
    Removing clk.o(.text.CLK_GetModuleClockDivider), (100 bytes).
    Removing clk.o(.ARM.exidx.text.CLK_GetModuleClockDivider), (8 bytes).
    Removing clk.o(.bss.g_CLK_i32ErrCode), (4 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.text.__aeabi_assert), (316 bytes).
    Removing retarget.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget.o(.text.abort), (2 bytes).
    Removing retarget.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.ProcessHardFault), (8 bytes).
    Removing retarget.o(.text.SendChar_ToUART), (74 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar_ToUART), (8 bytes).
    Removing retarget.o(.text.SendChar), (74 bytes).
    Removing retarget.o(.ARM.exidx.text.SendChar), (8 bytes).
    Removing retarget.o(.text.GetChar), (40 bytes).
    Removing retarget.o(.ARM.exidx.text.GetChar), (8 bytes).
    Removing retarget.o(.text.kbhit), (14 bytes).
    Removing retarget.o(.ARM.exidx.text.kbhit), (8 bytes).
    Removing retarget.o(.text.IsDebugFifoEmpty), (14 bytes).
    Removing retarget.o(.ARM.exidx.text.IsDebugFifoEmpty), (8 bytes).
    Removing retarget.o(.text._ttywrch), (74 bytes).
    Removing retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget.o(.text.fgetc), (40 bytes).
    Removing retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget.o(.text.ferror), (6 bytes).
    Removing retarget.o(.ARM.exidx.text.ferror), (8 bytes).
    Removing retarget.o(.bss.__stdin), (84 bytes).
    Removing sys.o(.text), (0 bytes).
    Removing sys.o(.text.SYS_ClearResetSrc), (14 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ClearResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_GetBODStatus), (14 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetBODStatus), (8 bytes).
    Removing sys.o(.text.SYS_GetResetSrc), (10 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_GetResetSrc), (8 bytes).
    Removing sys.o(.text.SYS_IsRegLocked), (18 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_IsRegLocked), (8 bytes).
    Removing sys.o(.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ReadPDID), (8 bytes).
    Removing sys.o(.text.SYS_ResetChip), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetChip), (8 bytes).
    Removing sys.o(.text.SYS_ResetCPU), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetCPU), (8 bytes).
    Removing sys.o(.text.SYS_ResetModule), (36 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_ResetModule), (8 bytes).
    Removing sys.o(.text.SYS_EnableBOD), (36 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_EnableBOD), (8 bytes).
    Removing sys.o(.text.SYS_DisableBOD), (16 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_DisableBOD), (8 bytes).
    Removing sys.o(.text.SYS_SetPowerLevel), (20 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_SetPowerLevel), (8 bytes).
    Removing sys.o(.text.SYS_SetVRef), (18 bytes).
    Removing sys.o(.ARM.exidx.text.SYS_SetVRef), (8 bytes).
    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.text.TIMER_Open), (170 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Open), (8 bytes).
    Removing timer.o(.text.TIMER_GetModuleClock), (104 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_GetModuleClock), (8 bytes).
    Removing timer.o(.text.TIMER_Close), (8 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Close), (8 bytes).
    Removing timer.o(.text.TIMER_Delay), (430 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_Delay), (8 bytes).
    Removing timer.o(.text.TIMER_EnableCapture), (24 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableCapture), (8 bytes).
    Removing timer.o(.text.TIMER_DisableCapture), (10 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableCapture), (8 bytes).
    Removing timer.o(.text.TIMER_EnableEventCounter), (20 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableEventCounter), (8 bytes).
    Removing timer.o(.text.TIMER_DisableEventCounter), (10 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableEventCounter), (8 bytes).
    Removing timer.o(.text.TIMER_EnableFreqCounter), (66 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_EnableFreqCounter), (8 bytes).
    Removing timer.o(.text.TIMER_DisableFreqCounter), (10 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_DisableFreqCounter), (8 bytes).
    Removing timer.o(.text.TIMER_SetTriggerSource), (12 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_SetTriggerSource), (8 bytes).
    Removing timer.o(.text.TIMER_SetTriggerTarget), (12 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_SetTriggerTarget), (8 bytes).
    Removing timer.o(.text.TIMER_ResetCounter), (216 bytes).
    Removing timer.o(.ARM.exidx.text.TIMER_ResetCounter), (8 bytes).
    Removing timer.o(.rodata.cst32), (32 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.text.UART_ClearIntFlag), (62 bytes).
    Removing uart.o(.ARM.exidx.text.UART_ClearIntFlag), (8 bytes).
    Removing uart.o(.text.UART_Close), (6 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Close), (8 bytes).
    Removing uart.o(.text.UART_DisableFlowCtrl), (10 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_DisableInt), (10 bytes).
    Removing uart.o(.ARM.exidx.text.UART_DisableInt), (8 bytes).
    Removing uart.o(.text.UART_EnableFlowCtrl), (26 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableFlowCtrl), (8 bytes).
    Removing uart.o(.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART_EnableInt), (8 bytes).
    Removing uart.o(.text.UART_Open), (372 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Open), (8 bytes).
    Removing uart.o(.text.UART_Read), (190 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Read), (8 bytes).
    Removing uart.o(.text.UART_SetLineConfig), (344 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetLineConfig), (8 bytes).
    Removing uart.o(.text.UART_SetTimeoutCnt), (20 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SetTimeoutCnt), (8 bytes).
    Removing uart.o(.text.UART_SelectIrDAMode), (358 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectIrDAMode), (8 bytes).
    Removing uart.o(.text.UART_SelectRS485Mode), (34 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectRS485Mode), (8 bytes).
    Removing uart.o(.text.UART_SelectLINMode), (22 bytes).
    Removing uart.o(.ARM.exidx.text.UART_SelectLINMode), (8 bytes).
    Removing uart.o(.text.UART_Write), (190 bytes).
    Removing uart.o(.ARM.exidx.text.UART_Write), (8 bytes).
    Removing uart.o(.rodata.cst16), (16 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetMode), (8 bytes).
    Removing gpio.o(.text.GPIO_EnableInt), (50 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_EnableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_DisableInt), (30 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_DisableInt), (8 bytes).
    Removing gpio.o(.text.GPIO_SetSlewCtl), (264 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetSlewCtl), (8 bytes).
    Removing gpio.o(.text.GPIO_SetPullCtl), (264 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_SetPullCtl), (8 bytes).
    Removing eadc.o(.text), (0 bytes).
    Removing eadc.o(.text.EADC_Open), (104 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_Open), (8 bytes).
    Removing eadc.o(.text.EADC_Close), (10 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_Close), (8 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_ConfigSampleModule), (8 bytes).
    Removing eadc.o(.text.EADC_SetTriggerDelayTime), (36 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_SetTriggerDelayTime), (8 bytes).
    Removing eadc.o(.text.EADC_SetExtendSampleTime), (30 bytes).
    Removing eadc.o(.ARM.exidx.text.EADC_SetExtendSampleTime), (8 bytes).
    Removing eadc.o(.bss.g_EADC_i32ErrCode), (4 bytes).
    Removing ebi.o(.text), (0 bytes).
    Removing ebi.o(.text.EBI_Open), (292 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_Open), (8 bytes).
    Removing ebi.o(.text.EBI_Close), (18 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_Close), (8 bytes).
    Removing ebi.o(.text.EBI_SetBusTiming), (36 bytes).
    Removing ebi.o(.ARM.exidx.text.EBI_SetBusTiming), (8 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).

278 unused section(s) (total 166684 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite.o ABSOLUTE
    ../clib/microlib/stdio/fwrite.c          0x00000000   Number         0  fwrite_e.o ABSOLUTE
    ../clib/microlib/stdio/putchar.c         0x00000000   Number         0  putchar.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    EBI_LCD_Module.c                         0x00000000   Number         0  ebi_lcd_module.o ABSOLUTE
    Library/Device/Nuvoton/M480/Source/ARM/startup_M480.s 0x00000000   Number         0  startup_m480.o ABSOLUTE
    WelcomeScreen.c                          0x00000000   Number         0  welcomescreen.o ABSOLUTE
    backgroundScreenPlay.c                   0x00000000   Number         0  backgroundscreenplay.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clk.c                                    0x00000000   Number         0  clk.o ABSOLUTE
    eadc.c                                   0x00000000   Number         0  eadc.o ABSOLUTE
    ebi.c                                    0x00000000   Number         0  ebi.o ABSOLUTE
    gameLogic.c                              0x00000000   Number         0  gamelogic.o ABSOLUTE
    gameLoop.c                               0x00000000   Number         0  gameloop.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    image.c                                  0x00000000   Number         0  image.o ABSOLUTE
    image_16x32.c                            0x00000000   Number         0  image_16x32.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    picture.c                                0x00000000   Number         0  picture.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    sys.c                                    0x00000000   Number         0  sys.o ABSOLUTE
    system_M480.c                            0x00000000   Number         0  system_m480.o ABSOLUTE
    timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      500  startup_m480.o(RESET)
    .ARM.Collect$$$$00000000                 0x000001f4   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000001f4   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000001f8   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000001fc   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000001fc   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000001fc   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000204   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000204   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000204   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000204   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000208   Number         0  startup_m480.o(.text)
    .text                                    0x00000208   Section      124  startup_m480.o(.text)
    Default_Handler                          0x00000269   Thumb Code     2  startup_m480.o(.text)
    .text                                    0x00000284   Section        0  rand.o(.text)
    .text                                    0x000002a8   Section        0  ddiv.o(.text)
    .text                                    0x00000386   Section        0  dflti.o(.text)
    .text                                    0x000003a8   Section        0  dfixi.o(.text)
    .text                                    0x000003e6   Section        0  uldiv.o(.text)
    .text                                    0x00000448   Section        0  llushr.o(.text)
    .text                                    0x00000468   Section        0  iusefp.o(.text)
    .text                                    0x00000468   Section        0  depilogue.o(.text)
    .text                                    0x00000524   Section       48  init.o(.text)
    .text                                    0x00000554   Section        0  llshl.o(.text)
    [Anonymous Symbol]                       0x00000574   Section        0  clk.o(.text.CLK_GetCPUFreq)
    [Anonymous Symbol]                       0x00000588   Section        0  clk.o(.text.CLK_GetHXTFreq)
    [Anonymous Symbol]                       0x000005a4   Section        0  clk.o(.text.CLK_GetPLLClockFreq)
    [Anonymous Symbol]                       0x000005fc   Section        0  gamelogic.o(.text.Draw_Current_Shape)
    [Anonymous Symbol]                       0x00000688   Section        0  gameloop.o(.text.Draw_I_Shape)
    [Anonymous Symbol]                       0x000007d8   Section        0  gameloop.o(.text.Draw_J_Shape)
    [Anonymous Symbol]                       0x0000092c   Section        0  gameloop.o(.text.Draw_L_Shape)
    [Anonymous Symbol]                       0x00000a9c   Section        0  gameloop.o(.text.Draw_O_Shape)
    [Anonymous Symbol]                       0x00000bfc   Section        0  gameloop.o(.text.Draw_S_Shape)
    [Anonymous Symbol]                       0x00000d64   Section        0  gameloop.o(.text.Draw_T_Shape)
    [Anonymous Symbol]                       0x00000ec4   Section        0  gameloop.o(.text.Draw_Z_Shape)
    [Anonymous Symbol]                       0x0000102c   Section        0  ebi_lcd_module.o(.text.EADC01_IRQHandler)
    [Anonymous Symbol]                       0x00001048   Section        0  eadc.o(.text.EADC_ConfigSampleModule)
    [Anonymous Symbol]                       0x00001070   Section        0  gpio.o(.text.GPIO_SetMode)
    [Anonymous Symbol]                       0x00001178   Section        0  ebi_lcd_module.o(.text.Get_TP_X)
    [Anonymous Symbol]                       0x00001288   Section        0  ebi_lcd_module.o(.text.Get_TP_Y)
    [Anonymous Symbol]                       0x0000139c   Section        0  ebi_lcd_module.o(.text.ILI9341_Initial)
    [Anonymous Symbol]                       0x0000168c   Section        0  ebi_lcd_module.o(.text.LCD_BlankArea)
    [Anonymous Symbol]                       0x00001914   Section        0  gameloop.o(.text.LCD_Draw_Border)
    [Anonymous Symbol]                       0x00001b04   Section        0  gameloop.o(.text.LCD_Draw_SquareBorder)
    [Anonymous Symbol]                       0x00001d34   Section        0  gameloop.o(.text.LCD_Picture)
    [Anonymous Symbol]                       0x00001d68   Section        0  ebi_lcd_module.o(.text.LCD_PutChar8x16)
    [Anonymous Symbol]                       0x00001f5c   Section        0  ebi_lcd_module.o(.text.LCD_PutString)
    [Anonymous Symbol]                       0x00001fa8   Section        0  ebi_lcd_module.o(.text.LCD_SetWindow)
    [Anonymous Symbol]                       0x00002000   Section        0  ebi_lcd_module.o(.text.LCD_WR_DATA)
    [Anonymous Symbol]                       0x0000200c   Section        0  retarget.o(.text.ProcessHardFault)
    [Anonymous Symbol]                       0x000021a8   Section        0  main.o(.text.SYS_Init)
    [Anonymous Symbol]                       0x0000242c   Section        0  system_m480.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00002494   Section        0  system_m480.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00002504   Section        0  main.o(.text.TMR1_IRQHandler)
    [Anonymous Symbol]                       0x00002530   Section        0  ebi_lcd_module.o(.text.TMR3_IRQHandler)
    [Anonymous Symbol]                       0x0000255c   Section        0  retarget.o(.text.fputc)
    [Anonymous Symbol]                       0x000025a8   Section        0  gameloop.o(.text.gameLoop)
    [Anonymous Symbol]                       0x00002634   Section        0  main.o(.text.main)
    i.__0printf$8                            0x00002970   Section        0  printf8.o(i.__0printf$8)
    i.__scatterload_copy                     0x00002990   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x0000299e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000029a0   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x000029b1   Thumb Code   996  printf8.o(i._printf_core)
    i._printf_core                           0x000029b0   Section        0  printf8.o(i._printf_core)
    _printf_post_padding                     0x00002dc1   Thumb Code    36  printf8.o(i._printf_post_padding)
    i._printf_post_padding                   0x00002dc0   Section        0  printf8.o(i._printf_post_padding)
    _printf_pre_padding                      0x00002de5   Thumb Code    46  printf8.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00002de4   Section        0  printf8.o(i._printf_pre_padding)
    i.putchar                                0x00002e14   Section        0  putchar.o(i.putchar)
    i.puts                                   0x00002e20   Section        0  puts.o(i.puts)
    .L__const.CLK_GetPLLClockFreq.au8NoTbl   0x0004e644   Data           4  clk.o(.rodata.cst4)
    .Lstr.10                                 0x0004e648   Data          60  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0004e648   Section        0  main.o(.rodata.str1.1)
    .L.str.8                                 0x0004e684   Data          31  main.o(.rodata.str1.1)
    .L.str.6                                 0x0004e6a3   Data          27  main.o(.rodata.str1.1)
    .L.str.7                                 0x0004e6be   Data          26  main.o(.rodata.str1.1)
    .L.str.5                                 0x0004e6d8   Data          11  gameloop.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0004e6d8   Section        0  gameloop.o(.rodata.str1.1)
    .L.str.2                                 0x0004e6e3   Data           5  gameloop.o(.rodata.str1.1)
    .L.str.1                                 0x0004e6e8   Data           6  gameloop.o(.rodata.str1.1)
    .L.str.3                                 0x0004e6ee   Data           6  gameloop.o(.rodata.str1.1)
    .L.str.4                                 0x0004e6f4   Data           8  gameloop.o(.rodata.str1.1)
    .L.str                                   0x0004e6fc   Data           5  gameloop.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0004e701   Section        0  gamelogic.o(.rodata.str1.1)
    .L.str.8                                 0x0004e70b   Data          32  retarget.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0004e70b   Section        0  retarget.o(.rodata.str1.1)
    .L.str.11                                0x0004e72b   Data          29  retarget.o(.rodata.str1.1)
    .L.str.7                                 0x0004e748   Data          27  retarget.o(.rodata.str1.1)
    .L.str.9                                 0x0004e763   Data           4  retarget.o(.rodata.str1.1)
    .L.str.10                                0x0004e767   Data           4  retarget.o(.rodata.str1.1)
    .Lstr.16                                 0x0004e76b   Data          35  retarget.o(.rodata.str1.1)
    _rand_state                              0x20000000   Data           4  rand.o(.data)
    .data                                    0x20000000   Section        4  rand.o(.data)
    STACK                                    0x200000d0   Section     2048  startup_m480.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_m480.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000001f4   Data           0  startup_m480.o(RESET)
    __Vectors_Size                           0x000001f4   Number         0  startup_m480.o ABSOLUTE
    __main                                   0x000001f5   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000001f5   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000001f9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000001fd   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000001fd   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000001fd   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000001fd   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000205   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000205   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000209   Thumb Code    64  startup_m480.o(.text)
    NMI_Handler                              0x00000249   Thumb Code     2  startup_m480.o(.text)
    HardFault_Handler                        0x0000024b   Thumb Code    16  startup_m480.o(.text)
    MemManage_Handler                        0x0000025b   Thumb Code     2  startup_m480.o(.text)
    BusFault_Handler                         0x0000025d   Thumb Code     2  startup_m480.o(.text)
    UsageFault_Handler                       0x0000025f   Thumb Code     2  startup_m480.o(.text)
    SVC_Handler                              0x00000261   Thumb Code     2  startup_m480.o(.text)
    DebugMon_Handler                         0x00000263   Thumb Code     2  startup_m480.o(.text)
    PendSV_Handler                           0x00000265   Thumb Code     2  startup_m480.o(.text)
    SysTick_Handler                          0x00000267   Thumb Code     2  startup_m480.o(.text)
    ACMP01_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    BOD_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    BPWM0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    BPWM1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    BRAKE0_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    BRAKE1_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    CAN0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CAN1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CAN2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CCAP_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    CKFAIL_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    CRYPTO_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    DAC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC00_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC02_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC03_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC10_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC11_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC12_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    EADC13_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    ECAP0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    ECAP1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EHCI_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT2_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT3_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT4_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT5_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT6_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EINT7_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    EMAC_RX_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EMAC_TX_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM0P0_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM0P1_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM0P2_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM1P0_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM1P1_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    EPWM1P2_IRQHandler                       0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPA_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPB_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPD_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPE_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPF_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPG_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    GPH_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2C0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2C1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2C2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    I2S0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    IRC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    OHCI_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    OPA0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    PDMA_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    PWRWU_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    QEI0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    QEI1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    QSPI0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    QSPI1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    RAMPE_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    RTC_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SC0_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SC1_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SC2_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    SDH0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SDH1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI1_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPI3_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    SPIM_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    TAMPER_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    TMR0_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    TMR2_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    TRNG_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART2_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART3_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART4_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART5_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART6_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    UART7_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBD20_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBD_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBOTG20_IRQHandler                      0x00000269   Thumb Code     0  startup_m480.o(.text)
    USBOTG_IRQHandler                        0x00000269   Thumb Code     0  startup_m480.o(.text)
    USCI0_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    USCI1_IRQHandler                         0x00000269   Thumb Code     0  startup_m480.o(.text)
    WDT_IRQHandler                           0x00000269   Thumb Code     0  startup_m480.o(.text)
    WWDT_IRQHandler                          0x00000269   Thumb Code     0  startup_m480.o(.text)
    rand                                     0x00000285   Thumb Code    20  rand.o(.text)
    srand                                    0x00000299   Thumb Code     6  rand.o(.text)
    __aeabi_ddiv                             0x000002a9   Thumb Code   222  ddiv.o(.text)
    __aeabi_i2d                              0x00000387   Thumb Code    34  dflti.o(.text)
    __aeabi_d2iz                             0x000003a9   Thumb Code    62  dfixi.o(.text)
    __aeabi_uldivmod                         0x000003e7   Thumb Code    98  uldiv.o(.text)
    __aeabi_llsr                             0x00000449   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x00000449   Thumb Code     0  llushr.o(.text)
    __I$use$fp                               0x00000469   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x00000469   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000487   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x00000525   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000525   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00000555   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000555   Thumb Code     0  llshl.o(.text)
    CLK_GetCPUFreq                           0x00000575   Thumb Code    18  clk.o(.text.CLK_GetCPUFreq)
    CLK_GetHXTFreq                           0x00000589   Thumb Code    28  clk.o(.text.CLK_GetHXTFreq)
    CLK_GetPLLClockFreq                      0x000005a5   Thumb Code    86  clk.o(.text.CLK_GetPLLClockFreq)
    Draw_Current_Shape                       0x000005fd   Thumb Code   120  gamelogic.o(.text.Draw_Current_Shape)
    Draw_I_Shape                             0x00000689   Thumb Code   336  gameloop.o(.text.Draw_I_Shape)
    Draw_J_Shape                             0x000007d9   Thumb Code   340  gameloop.o(.text.Draw_J_Shape)
    Draw_L_Shape                             0x0000092d   Thumb Code   366  gameloop.o(.text.Draw_L_Shape)
    Draw_O_Shape                             0x00000a9d   Thumb Code   350  gameloop.o(.text.Draw_O_Shape)
    Draw_S_Shape                             0x00000bfd   Thumb Code   358  gameloop.o(.text.Draw_S_Shape)
    Draw_T_Shape                             0x00000d65   Thumb Code   350  gameloop.o(.text.Draw_T_Shape)
    Draw_Z_Shape                             0x00000ec5   Thumb Code   358  gameloop.o(.text.Draw_Z_Shape)
    EADC01_IRQHandler                        0x0000102d   Thumb Code    26  ebi_lcd_module.o(.text.EADC01_IRQHandler)
    EADC_ConfigSampleModule                  0x00001049   Thumb Code    38  eadc.o(.text.EADC_ConfigSampleModule)
    GPIO_SetMode                             0x00001071   Thumb Code   264  gpio.o(.text.GPIO_SetMode)
    Get_TP_X                                 0x00001179   Thumb Code   248  ebi_lcd_module.o(.text.Get_TP_X)
    Get_TP_Y                                 0x00001289   Thumb Code   248  ebi_lcd_module.o(.text.Get_TP_Y)
    ILI9341_Initial                          0x0000139d   Thumb Code   716  ebi_lcd_module.o(.text.ILI9341_Initial)
    LCD_BlankArea                            0x0000168d   Thumb Code   646  ebi_lcd_module.o(.text.LCD_BlankArea)
    LCD_Draw_Border                          0x00001915   Thumb Code   494  gameloop.o(.text.LCD_Draw_Border)
    LCD_Draw_SquareBorder                    0x00001b05   Thumb Code   560  gameloop.o(.text.LCD_Draw_SquareBorder)
    LCD_Picture                              0x00001d35   Thumb Code    50  gameloop.o(.text.LCD_Picture)
    LCD_PutChar8x16                          0x00001d69   Thumb Code   498  ebi_lcd_module.o(.text.LCD_PutChar8x16)
    LCD_PutString                            0x00001f5d   Thumb Code    74  ebi_lcd_module.o(.text.LCD_PutString)
    LCD_SetWindow                            0x00001fa9   Thumb Code    88  ebi_lcd_module.o(.text.LCD_SetWindow)
    LCD_WR_DATA                              0x00002001   Thumb Code    10  ebi_lcd_module.o(.text.LCD_WR_DATA)
    ProcessHardFault                         0x0000200d   Thumb Code   264  retarget.o(.text.ProcessHardFault)
    SYS_Init                                 0x000021a9   Thumb Code   644  main.o(.text.SYS_Init)
    SystemCoreClockUpdate                    0x0000242d   Thumb Code   104  system_m480.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00002495   Thumb Code   112  system_m480.o(.text.SystemInit)
    TMR1_IRQHandler                          0x00002505   Thumb Code    44  main.o(.text.TMR1_IRQHandler)
    TMR3_IRQHandler                          0x00002531   Thumb Code    44  ebi_lcd_module.o(.text.TMR3_IRQHandler)
    fputc                                    0x0000255d   Thumb Code    74  retarget.o(.text.fputc)
    gameLoop                                 0x000025a9   Thumb Code   138  gameloop.o(.text.gameLoop)
    main                                     0x00002635   Thumb Code   692  main.o(.text.main)
    __0printf$8                              0x00002971   Thumb Code    22  printf8.o(i.__0printf$8)
    __1printf$8                              0x00002971   Thumb Code     0  printf8.o(i.__0printf$8)
    __2printf                                0x00002971   Thumb Code     0  printf8.o(i.__0printf$8)
    __scatterload_copy                       0x00002991   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x0000299f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000029a1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    putchar                                  0x00002e15   Thumb Code     6  putchar.o(i.putchar)
    puts                                     0x00002e21   Thumb Code    30  puts.o(i.puts)
    Font8x16                                 0x00002e44   Data        2048  image.o(.rodata.Font8x16)
    WelcomeScreen                            0x00003644   Data       153600  welcomescreen.o(.rodata.WelcomeScreen)
    backgroundScreenPlay                     0x00028e44   Data       153600  backgroundscreenplay.o(.rodata.backgroundScreenPlay)
    Region$$Table$$Base                      0x0004e790   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0004e7b0   Number         0  anon$$obj.o(Region$$Table)
    CyclesPerUs                              0x20000004   Data           4  system_m480.o(.data.CyclesPerUs)
    PllClock                                 0x20000008   Data           4  system_m480.o(.data.PllClock)
    SystemCoreClock                          0x2000000c   Data           4  system_m480.o(.data.SystemCoreClock)
    gau32ClkSrcTbl                           0x20000010   Data          32  system_m480.o(.data.gau32ClkSrcTbl)
    nextShapeIndex                           0x20000030   Data           4  gameloop.o(.data.nextShapeIndex)
    shapeFunctions                           0x20000034   Data          28  gamelogic.o(.data.shapeFunctions)
    shapeNames                               0x20000050   Data          28  gamelogic.o(.data.shapeNames)
    Timer1_cnt                               0x20000070   Data           1  main.o(.bss.Timer1_cnt)
    Timer1_flag                              0x20000071   Data           1  main.o(.bss.Timer1_flag)
    Timer3_cnt                               0x20000072   Data           1  ebi_lcd_module.o(.bss.Timer3_cnt)
    Timer3_flag                              0x20000073   Data           1  ebi_lcd_module.o(.bss.Timer3_flag)
    __stdout                                 0x20000074   Data          84  retarget.o(.bss.__stdout)
    g_u32AdcIntFlag_TP                       0x200000c8   Data           4  ebi_lcd_module.o(.bss.g_u32AdcIntFlag_TP)
    isPaused                                 0x200000cc   Data           1  gameloop.o(.bss.isPaused)
    __initial_sp                             0x200008d0   Data           0  startup_m480.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000209

  Load Region LR_1 (Base: 0x00000000, Size: 0x0004e81c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0004e7b0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000001f4   Data   RO           19    RESET               startup_m480.o
    0x000001f4   0x000001f4   0x00000000   Code   RO          450  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000001f4   0x000001f4   0x00000004   Code   RO          736    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000001f8   0x000001f8   0x00000004   Code   RO          739    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000001fc   0x000001fc   0x00000000   Code   RO          741    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000001fc   0x000001fc   0x00000000   Code   RO          743    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000001fc   0x000001fc   0x00000008   Code   RO          744    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000204   0x00000204   0x00000000   Code   RO          746    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000204   0x00000204   0x00000000   Code   RO          748    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000204   0x00000204   0x00000004   Code   RO          737    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000208   0x00000208   0x0000007c   Code   RO           20  * .text               startup_m480.o
    0x00000284   0x00000284   0x00000024   Code   RO          466    .text               mc_w.l(rand.o)
    0x000002a8   0x000002a8   0x000000de   Code   RO          730    .text               mf_w.l(ddiv.o)
    0x00000386   0x00000386   0x00000022   Code   RO          732    .text               mf_w.l(dflti.o)
    0x000003a8   0x000003a8   0x0000003e   Code   RO          734    .text               mf_w.l(dfixi.o)
    0x000003e6   0x000003e6   0x00000062   Code   RO          761    .text               mc_w.l(uldiv.o)
    0x00000448   0x00000448   0x00000020   Code   RO          763    .text               mc_w.l(llushr.o)
    0x00000468   0x00000468   0x00000000   Code   RO          765    .text               mc_w.l(iusefp.o)
    0x00000468   0x00000468   0x000000ba   Code   RO          766    .text               mf_w.l(depilogue.o)
    0x00000522   0x00000522   0x00000002   PAD
    0x00000524   0x00000524   0x00000030   Code   RO          776    .text               mc_w.l(init.o)
    0x00000554   0x00000554   0x0000001e   Code   RO          778    .text               mc_w.l(llshl.o)
    0x00000572   0x00000572   0x00000002   PAD
    0x00000574   0x00000574   0x00000012   Code   RO          215    .text.CLK_GetCPUFreq  clk.o
    0x00000586   0x00000586   0x00000002   PAD
    0x00000588   0x00000588   0x0000001c   Code   RO          205    .text.CLK_GetHXTFreq  clk.o
    0x000005a4   0x000005a4   0x00000056   Code   RO          233    .text.CLK_GetPLLClockFreq  clk.o
    0x000005fa   0x000005fa   0x00000002   PAD
    0x000005fc   0x000005fc   0x0000008c   Code   RO          175    .text.Draw_Current_Shape  gamelogic.o
    0x00000688   0x00000688   0x00000150   Code   RO          122    .text.Draw_I_Shape  gameloop.o
    0x000007d8   0x000007d8   0x00000154   Code   RO          124    .text.Draw_J_Shape  gameloop.o
    0x0000092c   0x0000092c   0x0000016e   Code   RO          126    .text.Draw_L_Shape  gameloop.o
    0x00000a9a   0x00000a9a   0x00000002   PAD
    0x00000a9c   0x00000a9c   0x0000015e   Code   RO          130    .text.Draw_O_Shape  gameloop.o
    0x00000bfa   0x00000bfa   0x00000002   PAD
    0x00000bfc   0x00000bfc   0x00000166   Code   RO          128    .text.Draw_S_Shape  gameloop.o
    0x00000d62   0x00000d62   0x00000002   PAD
    0x00000d64   0x00000d64   0x0000015e   Code   RO          132    .text.Draw_T_Shape  gameloop.o
    0x00000ec2   0x00000ec2   0x00000002   PAD
    0x00000ec4   0x00000ec4   0x00000166   Code   RO          134    .text.Draw_Z_Shape  gameloop.o
    0x0000102a   0x0000102a   0x00000002   PAD
    0x0000102c   0x0000102c   0x0000001a   Code   RO           81    .text.EADC01_IRQHandler  ebi_lcd_module.o
    0x00001046   0x00001046   0x00000002   PAD
    0x00001048   0x00001048   0x00000026   Code   RO          422    .text.EADC_ConfigSampleModule  eadc.o
    0x0000106e   0x0000106e   0x00000002   PAD
    0x00001070   0x00001070   0x00000108   Code   RO          400    .text.GPIO_SetMode  gpio.o
    0x00001178   0x00001178   0x00000110   Code   RO           77    .text.Get_TP_X      ebi_lcd_module.o
    0x00001288   0x00001288   0x00000114   Code   RO           79    .text.Get_TP_Y      ebi_lcd_module.o
    0x0000139c   0x0000139c   0x000002f0   Code   RO           67    .text.ILI9341_Initial  ebi_lcd_module.o
    0x0000168c   0x0000168c   0x00000286   Code   RO           75    .text.LCD_BlankArea  ebi_lcd_module.o
    0x00001912   0x00001912   0x00000002   PAD
    0x00001914   0x00001914   0x000001ee   Code   RO          138    .text.LCD_Draw_Border  gameloop.o
    0x00001b02   0x00001b02   0x00000002   PAD
    0x00001b04   0x00001b04   0x00000230   Code   RO          116    .text.LCD_Draw_SquareBorder  gameloop.o
    0x00001d34   0x00001d34   0x00000032   Code   RO          112    .text.LCD_Picture   gameloop.o
    0x00001d66   0x00001d66   0x00000002   PAD
    0x00001d68   0x00001d68   0x000001f2   Code   RO           69    .text.LCD_PutChar8x16  ebi_lcd_module.o
    0x00001f5a   0x00001f5a   0x00000002   PAD
    0x00001f5c   0x00001f5c   0x0000004a   Code   RO           71    .text.LCD_PutString  ebi_lcd_module.o
    0x00001fa6   0x00001fa6   0x00000002   PAD
    0x00001fa8   0x00001fa8   0x00000058   Code   RO           65    .text.LCD_SetWindow  ebi_lcd_module.o
    0x00002000   0x00002000   0x0000000a   Code   RO           61    .text.LCD_WR_DATA   ebi_lcd_module.o
    0x0000200a   0x0000200a   0x00000002   PAD
    0x0000200c   0x0000200c   0x0000019c   Code   RO          265    .text.ProcessHardFault  retarget.o
    0x000021a8   0x000021a8   0x00000284   Code   RO           27    .text.SYS_Init      main.o
    0x0000242c   0x0000242c   0x00000068   Code   RO            2    .text.SystemCoreClockUpdate  system_m480.o
    0x00002494   0x00002494   0x00000070   Code   RO            4    .text.SystemInit    system_m480.o
    0x00002504   0x00002504   0x0000002c   Code   RO           35    .text.TMR1_IRQHandler  main.o
    0x00002530   0x00002530   0x0000002c   Code   RO           55    .text.TMR3_IRQHandler  ebi_lcd_module.o
    0x0000255c   0x0000255c   0x0000004a   Code   RO          279    .text.fputc         retarget.o
    0x000025a6   0x000025a6   0x00000002   PAD
    0x000025a8   0x000025a8   0x0000008a   Code   RO          144    .text.gameLoop      gameloop.o
    0x00002632   0x00002632   0x00000002   PAD
    0x00002634   0x00002634   0x0000033c   Code   RO           41    .text.main          main.o
    0x00002970   0x00002970   0x00000020   Code   RO          676    i.__0printf$8       mc_w.l(printf8.o)
    0x00002990   0x00002990   0x0000000e   Code   RO          784    i.__scatterload_copy  mc_w.l(handlers.o)
    0x0000299e   0x0000299e   0x00000002   Code   RO          785    i.__scatterload_null  mc_w.l(handlers.o)
    0x000029a0   0x000029a0   0x0000000e   Code   RO          786    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000029ae   0x000029ae   0x00000002   PAD
    0x000029b0   0x000029b0   0x00000410   Code   RO          683    i._printf_core      mc_w.l(printf8.o)
    0x00002dc0   0x00002dc0   0x00000024   Code   RO          684    i._printf_post_padding  mc_w.l(printf8.o)
    0x00002de4   0x00002de4   0x0000002e   Code   RO          685    i._printf_pre_padding  mc_w.l(printf8.o)
    0x00002e12   0x00002e12   0x00000002   PAD
    0x00002e14   0x00002e14   0x0000000c   Code   RO          457    i.putchar           mc_w.l(putchar.o)
    0x00002e20   0x00002e20   0x00000024   Code   RO          453    i.puts              mc_w.l(puts.o)
    0x00002e44   0x00002e44   0x00000800   Data   RO           94    .rodata.Font8x16    image.o
    0x00003644   0x00003644   0x00025800   Data   RO          157    .rodata.WelcomeScreen  welcomescreen.o
    0x00028e44   0x00028e44   0x00025800   Data   RO          163    .rodata.backgroundScreenPlay  backgroundscreenplay.o
    0x0004e644   0x0004e644   0x00000004   Data   RO          252    .rodata.cst4        clk.o
    0x0004e648   0x0004e648   0x00000090   Data   RO           45    .rodata.str1.1      main.o
    0x0004e6d8   0x0004e6d8   0x00000029   Data   RO          148    .rodata.str1.1      gameloop.o
    0x0004e701   0x0004e701   0x0000000a   Data   RO          181    .rodata.str1.1      gamelogic.o
    0x0004e70b   0x0004e70b   0x00000083   Data   RO          285    .rodata.str1.1      retarget.o
    0x0004e78e   0x0004e78e   0x00000002   PAD
    0x0004e790   0x0004e790   0x00000020   Data   RO          783    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x0004e7b0, Size: 0x0000006c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0004e7b0   0x00000004   Data   RW          467    .data               mc_w.l(rand.o)
    0x20000004   0x0004e7b4   0x00000004   Data   RW            7    .data.CyclesPerUs   system_m480.o
    0x20000008   0x0004e7b8   0x00000004   Data   RW            8    .data.PllClock      system_m480.o
    0x2000000c   0x0004e7bc   0x00000004   Data   RW            6    .data.SystemCoreClock  system_m480.o
    0x20000010   0x0004e7c0   0x00000020   Data   RW            9    .data.gau32ClkSrcTbl  system_m480.o
    0x20000030   0x0004e7e0   0x00000004   Data   RW          147    .data.nextShapeIndex  gameloop.o
    0x20000034   0x0004e7e4   0x0000001c   Data   RW          180    .data.shapeFunctions  gamelogic.o
    0x20000050   0x0004e800   0x0000001c   Data   RW          182    .data.shapeNames    gamelogic.o


    Execution Region ER_ZI (Exec base: 0x20000070, Load base: 0x0004e81c, Size: 0x00000860, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000070        -       0x00000001   Zero   RW           44    .bss.Timer1_cnt     main.o
    0x20000071        -       0x00000001   Zero   RW           43    .bss.Timer1_flag    main.o
    0x20000072        -       0x00000001   Zero   RW           84    .bss.Timer3_cnt     ebi_lcd_module.o
    0x20000073        -       0x00000001   Zero   RW           83    .bss.Timer3_flag    ebi_lcd_module.o
    0x20000074        -       0x00000054   Zero   RW          286    .bss.__stdout       retarget.o
    0x200000c8        -       0x00000004   Zero   RW           85    .bss.g_u32AdcIntFlag_TP  ebi_lcd_module.o
    0x200000cc        -       0x00000001   Zero   RW          146    .bss.isPaused       gameloop.o
    0x200000cd   0x0004e81c   0x00000003   PAD
    0x200000d0        -       0x00000800   Zero   RW           17    STACK               startup_m480.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0     153600          0          0        520   backgroundscreenplay.o
       132          0          4          0          0      17321   clk.o
        38          0          0          0          0       2695   eadc.o
      2686         88          0          0          6      18505   ebi_lcd_module.o
       140         20         10         56          0       2978   gamelogic.o
      3700          0         41          4          1      14340   gameloop.o
       264          0          0          0          0       2697   gpio.o
         0          0       2048          0          0        480   image.o
      1516        136        144          0          2       9989   main.o
       486        148        131          0         84       5430   retarget.o
       124         26        500          0       2048        928   startup_m480.o
       216          0          0         44          0       4301   system_m480.o
         0          0     153600          0          0        499   welcomescreen.o

    ----------------------------------------------------------------------
      9336        418     310112        104       2144      80683   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        34          0          2          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
      1154         54          0          0          0        352   printf8.o
        12          6          0          0          0         68   putchar.o
        36          6          0          0          0         80   puts.o
        36         10          0          4          0        136   rand.o
        98          0          0          0          0         92   uldiv.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        34          0          0          0          0         76   dflti.o

    ----------------------------------------------------------------------
      2008         94          0          4          0       1364   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1496         94          0          4          0        932   mc_w.l
       504          0          0          0          0        432   mf_w.l

    ----------------------------------------------------------------------
      2008         94          0          4          0       1364   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11344        512     310112        108       2144      81467   Grand Totals
     11344        512     310112        108       2144      81467   ELF Image Totals
     11344        512     310112        108          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)               321456 ( 313.92kB)
    Total RW  Size (RW Data + ZI Data)              2252 (   2.20kB)
    Total ROM Size (Code + RO Data + RW Data)     321564 ( 314.03kB)

==============================================================================

