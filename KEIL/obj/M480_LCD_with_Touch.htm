<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\M480_LCD_with_Touch.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\M480_LCD_with_Touch.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6220000: Last Updated: Sat May 24 01:05:32 2025
<BR><P>
<H3>Maximum Stack Usage =        228 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; gameLoop &rArr; Spawn_New_Shape &rArr; SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[f]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[36]">ACMP01_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[a]">BOD_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[54]">BPWM0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[55]">BPWM1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[22]">BRAKE0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[26]">BRAKE1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[41]">CAN0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[42]">CAN1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[69]">CAN2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[57]">CCAP_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[e]">CKFAIL_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4d]">CRYPTO_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[33]">DAC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[f]">Default_Handler</a> from startup_m480.o(.text) referenced 14 times from startup_m480.o(RESET)
 <LI><a href="#[70]">Draw_I_Shape</a> from gameloop.o(.text.Draw_I_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[71]">Draw_J_Shape</a> from gameloop.o(.text.Draw_J_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[72]">Draw_L_Shape</a> from gameloop.o(.text.Draw_L_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[73]">Draw_O_Shape</a> from gameloop.o(.text.Draw_O_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[74]">Draw_S_Shape</a> from gameloop.o(.text.Draw_S_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[75]">Draw_T_Shape</a> from gameloop.o(.text.Draw_T_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[76]">Draw_Z_Shape</a> from gameloop.o(.text.Draw_Z_Shape) referenced from gamelogic.o(.data.shapeFunctions)
 <LI><a href="#[34]">EADC00_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[35]">EADC01_IRQHandler</a> from ebi_lcd_module.o(.text.EADC01_IRQHandler) referenced from startup_m480.o(RESET)
 <LI><a href="#[37]">EADC02_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[38]">EADC03_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[65]">EADC10_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[66]">EADC11_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[67]">EADC12_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[68]">EADC13_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5b]">ECAP0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5c]">ECAP1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[60]">EHCI_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[14]">EINT0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[15]">EINT1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[16]">EINT2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[17]">EINT3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[18]">EINT4_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[19]">EINT5_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4f]">EINT6_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5e]">EINT7_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4a]">EMAC_RX_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[49]">EMAC_TX_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[23]">EPWM0P0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[24]">EPWM0P1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[25]">EPWM0P2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[27]">EPWM1P0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[28]">EPWM1P1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[29]">EPWM1P2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1a]">GPA_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1b]">GPB_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1c]">GPC_IRQHandler</a> from main.o(.text.GPC_IRQHandler) referenced from startup_m480.o(RESET)
 <LI><a href="#[1d]">GPD_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1e]">GPE_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1f]">GPF_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4e]">GPG_IRQHandler</a> from main.o(.text.GPG_IRQHandler) referenced from startup_m480.o(RESET)
 <LI><a href="#[5d]">GPH_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[30]">I2C0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[31]">I2C1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[58]">I2C2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4b]">I2S0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[b]">IRC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3f]">OHCI_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4c]">OPA0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[32]">PDMA_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[c]">PWRWU_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6d]">ProcessHardFault</a> from retarget.o(.text.ProcessHardFault) referenced from startup_m480.o(.text)
 <LI><a href="#[59]">QEI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5a]">QEI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[20]">QSPI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3b]">QSPI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[d]">RAMPE_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[43]">SC0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[44]">SC1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[45]">SC2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[47]">SDH0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5f]">SDH1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[21]">SPI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3c]">SPI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[46]">SPI3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[56]">SPIM_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6b]">SystemInit</a> from system_m480.o(.text.SystemInit) referenced from startup_m480.o(.text)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2a]">TMR0_IRQHandler</a> from main.o(.text.TMR0_IRQHandler) referenced from startup_m480.o(RESET)
 <LI><a href="#[2b]">TMR1_IRQHandler</a> from main.o(.text.TMR1_IRQHandler) referenced from startup_m480.o(RESET)
 <LI><a href="#[2c]">TMR2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2d]">TMR3_IRQHandler</a> from ebi_lcd_module.o(.text.TMR3_IRQHandler) referenced from startup_m480.o(RESET)
 <LI><a href="#[62]">TRNG_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2e]">UART0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2f]">UART1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[39]">UART2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3a]">UART3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[50]">UART4_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[51]">UART5_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[63]">UART6_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[64]">UART7_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[48]">USBD20_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3e]">USBD_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[61]">USBOTG20_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[40]">USBOTG_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[52]">USCI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[53]">USCI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[12]">WDT_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[13]">WWDT_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_m480.o(.text)
 <LI><a href="#[6f]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[6e]">fputc</a> from retarget.o(.text.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[6a]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[77]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a2]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a3]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a4]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a5]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[a6]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ACMP01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>BPWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>BPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>BRAKE0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>BRAKE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CAN2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CCAP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CKFAIL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CRYPTO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EADC00_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EADC02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EADC03_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>EADC10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>EADC11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>EADC12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>EADC13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>ECAP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>ECAP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>EHCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EINT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>EINT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>EINT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>EMAC_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>EMAC_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EPWM0P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EPWM0P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EPWM0P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EPWM1P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EPWM1P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EPWM1P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>OHCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>OPA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>QEI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>QEI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RAMPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SDH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SDH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SPIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USBD20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USBOTG20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USBOTG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USCI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USCI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Current_Shape
</UL>

<P><STRONG><a name="[a7]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a8]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[aa]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>Check_Collision</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, gamelogic.o(.text.Check_Collision))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Check_Collision
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spawn_New_Shape
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drop_Block_Fast
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Block_Left
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Block_Right
</UL>

<P><STRONG><a name="[85]"></a>Clear_Lines</STRONG> (Thumb, 396 bytes, Stack size 28 bytes, gamelogic.o(.text.Clear_Lines))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Clear_Lines
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drop_Block_Fast
</UL>

<P><STRONG><a name="[7d]"></a>Draw_Current_Shape</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gamelogic.o(.text.Draw_Current_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Draw_Current_Shape &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
</UL>

<P><STRONG><a name="[80]"></a>Draw_Grid</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, gameloop.o(.text.Draw_Grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Draw_Grid &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
</UL>

<P><STRONG><a name="[70]"></a>Draw_I_Shape</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, gameloop.o(.text.Draw_I_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Draw_I_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[71]"></a>Draw_J_Shape</STRONG> (Thumb, 340 bytes, Stack size 48 bytes, gameloop.o(.text.Draw_J_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Draw_J_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[72]"></a>Draw_L_Shape</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, gameloop.o(.text.Draw_L_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Draw_L_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[73]"></a>Draw_O_Shape</STRONG> (Thumb, 350 bytes, Stack size 56 bytes, gameloop.o(.text.Draw_O_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Draw_O_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[74]"></a>Draw_S_Shape</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, gameloop.o(.text.Draw_S_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Draw_S_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[75]"></a>Draw_T_Shape</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, gameloop.o(.text.Draw_T_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Draw_T_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[76]"></a>Draw_Z_Shape</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, gameloop.o(.text.Draw_Z_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Draw_Z_Shape &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gamelogic.o(.data.shapeFunctions)
</UL>
<P><STRONG><a name="[83]"></a>Drop_Block_Fast</STRONG> (Thumb, 402 bytes, Stack size 32 bytes, gamelogic.o(.text.Drop_Block_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Drop_Block_Fast &rArr; SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Lines
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Collision
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPC_IRQHandler
</UL>

<P><STRONG><a name="[35]"></a>EADC01_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ebi_lcd_module.o(.text.EADC01_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPC_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(.text.GPC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GPC_IRQHandler &rArr; Drop_Block_Fast &rArr; SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drop_Block_Fast
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Block_Left
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>GPG_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(.text.GPG_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPG_IRQHandler &rArr; Rotate_Current_Block
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Block_Right
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotate_Current_Block
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>ILI9341_Initial</STRONG> (Thumb, 716 bytes, Stack size 36 bytes, ebi_lcd_module.o(.text.ILI9341_Initial))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ILI9341_Initial &rArr; puts
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>LCD_BlankArea</STRONG> (Thumb, 646 bytes, Stack size 36 bytes, ebi_lcd_module.o(.text.LCD_BlankArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_BlankArea
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>LCD_DisplayTime</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, gamelogic.o(.text.LCD_DisplayTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = LCD_DisplayTime &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutString
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>LCD_Draw_Border</STRONG> (Thumb, 494 bytes, Stack size 32 bytes, gameloop.o(.text.LCD_Draw_Border))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = LCD_Draw_Border &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_SquareBorder
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutString
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
</UL>

<P><STRONG><a name="[90]"></a>LCD_Draw_SquareBorder</STRONG> (Thumb, 560 bytes, Stack size 56 bytes, gameloop.o(.text.LCD_Draw_SquareBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_Draw_SquareBorder &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Border
</UL>

<P><STRONG><a name="[91]"></a>LCD_Picture</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gameloop.o(.text.LCD_Picture))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_Picture &rArr; LCD_SetWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetWindow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WR_DATA
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
</UL>

<P><STRONG><a name="[92]"></a>LCD_PutChar8x16</STRONG> (Thumb, 498 bytes, Stack size 68 bytes, ebi_lcd_module.o(.text.LCD_PutChar8x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LCD_PutChar8x16
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutString
</UL>

<P><STRONG><a name="[8e]"></a>LCD_PutString</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, ebi_lcd_module.o(.text.LCD_PutString))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutChar8x16
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Border
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>LCD_SetWindow</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, ebi_lcd_module.o(.text.LCD_SetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Grid
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Border
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Z_Shape
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_T_Shape
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_O_Shape
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_S_Shape
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_L_Shape
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_J_Shape
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_I_Shape
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_SquareBorder
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Picture
</UL>

<P><STRONG><a name="[82]"></a>LCD_WR_DATA</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ebi_lcd_module.o(.text.LCD_WR_DATA))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Grid
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Border
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Z_Shape
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_T_Shape
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_O_Shape
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_S_Shape
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_L_Shape
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_J_Shape
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_I_Shape
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_SquareBorder
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Picture
</UL>

<P><STRONG><a name="[98]"></a>Merge_Shape_Into_Grid</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gamelogic.o(.text.Merge_Shape_Into_Grid))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Merge_Shape_Into_Grid
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
</UL>

<P><STRONG><a name="[87]"></a>Move_Block_Left</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gamelogic.o(.text.Move_Block_Left))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Move_Block_Left &rArr; Check_Collision
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Collision
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPC_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>Move_Block_Right</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gamelogic.o(.text.Move_Block_Right))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Move_Block_Right &rArr; Check_Collision
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Collision
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPG_IRQHandler
</UL>

<P><STRONG><a name="[6d]"></a>ProcessHardFault</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, retarget.o(.text.ProcessHardFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ProcessHardFault &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(.text)
</UL>
<P><STRONG><a name="[9a]"></a>Rotate_Clockwise</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gamelogic.o(.text.Rotate_Clockwise))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
</UL>

<P><STRONG><a name="[88]"></a>Rotate_Current_Block</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, gamelogic.o(.text.Rotate_Current_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Rotate_Current_Block
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPG_IRQHandler
</UL>

<P><STRONG><a name="[9b]"></a>SYS_Init</STRONG> (Thumb, 756 bytes, Stack size 0 bytes, main.o(.text.SYS_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>SetState</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, gamestate.o(.text.SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Current_Shape
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Picture
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BlankArea
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutString
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Stop
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Start
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spawn_New_Shape
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drop_Block_Fast
</UL>

<P><STRONG><a name="[96]"></a>Spawn_New_Shape</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gamelogic.o(.text.Spawn_New_Shape))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Spawn_New_Shape &rArr; SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Collision
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
</UL>

<P><STRONG><a name="[6b]"></a>SystemInit</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, system_m480.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>TMR0_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text.TMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TMR1_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main.o(.text.TMR1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TMR3_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ebi_lcd_module.o(.text.TMR3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>Timer0_Start</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.Timer0_Start))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
</UL>

<P><STRONG><a name="[95]"></a>Timer0_Stop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.Timer0_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
</UL>

<P><STRONG><a name="[99]"></a>Update_Level_Speed</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, gamelogic.o(.text.Update_Level_Speed))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
</UL>

<P><STRONG><a name="[6e]"></a>fputc</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, retarget.o(.text.fputc))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[97]"></a>gameLoop</STRONG> (Thumb, 376 bytes, Stack size 64 bytes, gameloop.o(.text.gameLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = gameLoop &rArr; Spawn_New_Shape &rArr; SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Current_Shape
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Grid
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_Level_Speed
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Draw_Border
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spawn_New_Shape
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Lines
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Merge_Shape_Into_Grid
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Collision
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotate_Clockwise
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>main</STRONG> (Thumb, 1088 bytes, Stack size 8 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = main &rArr; gameLoop &rArr; Spawn_New_Shape &rArr; SetState &rArr; LCD_PutString &rArr; LCD_PutChar8x16
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gameLoop
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayTime
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BlankArea
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Initial
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutString
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[9c]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ab]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[7f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Current_Shape
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessHardFault
</UL>

<P><STRONG><a name="[9e]"></a>__0sprintf$8</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ac]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[8d]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetState
</UL>

<P><STRONG><a name="[ad]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ae]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[af]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8b]"></a>puts</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = puts
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Initial
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessHardFault
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[a0]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[9f]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
